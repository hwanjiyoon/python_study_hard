print("Hello, Python!")

# 주석(comment) : 컴퓨터가 읽는 부분이 아니라 사람이 읽을 수 있도록 정보를 제공하는 방법으로 주석처리가 되어있는 부분은 파이썬 인터프리터가 코드로 인지하지않음미리 작성해놓고 후에 주석 처리를 하는 방법 : ctrl+/

'''
다중 주석 처리

앞으로 우리가 필기를 하게되는 내용이 여러 줄에 걸쳐있을 경우에는 미리 작은따옴표 세개(누르면 자동으로 세 개 더 나옴)를 눌러주고 타이핑을 진행하게 됩니다 > 엔터쳤을 때 자동으로 나머지 세 개의 작은 따옴표가 내려가게되면서 ctrl+/를 할 필요학 없다는 장점이 있겠습니다.

1번 라인에서 우리가 작성한 print("Hello, Python!")을 분석하겠습니다.
'''
print(type("1")) #<class 'str'>
print(type(1)) #<class 'int'>
print("Hello, Python!")
print("1"+"2") #결과값 : 12
print(1+2) #결과값 : 3
print("2"+"1") #결과값 : 21 / 문자열이라서 순서가 중요
print(2+1) #결과값 : 3 / 정수라서 계산이 맞음"
"""
12-13번 라인의 출력 결과가 동일하기 때문에 큰따옴표의 필요성에 대해 인지하지 못할 수 있지만 14번 라인이 오류가 발생하는 점에서 차이 발견 가능
숫자는 문자열로 사용 가능
"""

"""
print() : 컴퓨터한테 출력해달라고 요청하는 명령어
type() : 소괄호 내에 들어가있는 데이터가 어떤 자료형인지 표시하는 명령어
>주로 print() 함수와 합쳐져서 사용됨.
str : string의 축약어로 '문자열'을 의미
int : interger의 축약어로 '정수'를 의미

자기 소개를 한다고 가정하면 그것이 콘솔에 출력되려면 큰따옴표내에 작성해야함
"""

print("제 이름은 ooo입니다. 나이는oo살이고, oo구에 삽니다.")
introduction = "제 이름은 ooo입니다. 나이는oo살이고, oo구에 삽니다."
print(introduction)
'''
변수(variable) : 데이터를 저장하는 바구니 > 이름은 자유롭게 바꾸기

변수 명명 규칙(python 버전)
1. 변수의 경우 소문자로만 입력
2. 여러 단어가 합쳐진 변수의 경우 _로 연결 ex)school_name, 변수를 통해서 프로그램 유추가능
name 이라는 변수에 이름 대입
age 라는 변수에 나이를 대입
'''

name = "윤지환"
age = 23

print(name)
print(age+1) #변수가 담겨있다면 수학적 연산이 가능



#b = 1
#print(b)
#b = b + 1
#print(b)

#print(type(1))

'''
f-string : formatted string의 축약어로 str 내에 변수를 불러올 수 있음

'''

#print(f"제 이름은 {name}이고, 나이는 {age}살입니다. 내년에는 {age+1}살이 됩니다.")

'''
지금까지 수업한 방식으로는 미리 데이터를 준비해놓고, 거기에에 변수를 대입합니다. 즉 실시간으로 데이터를 입력할 수 없습니다.
input()을 사용하면 해결가능
'''

#input("당신의 이름은 무엇입니까? >>> ")

'''
위와 같이 입력하고 실행시키면 콘솔창에 이름을 입력할 수 있도록 커서가 깜빡거립니다.
거기에 이름을 입력하면 프로그램이 종료된다는 점을 확인할 수 있습니다.

즉, 데이터를 입력 받기는 했지만 변수에 저장하는 과정이 없었기 때문에 데이터가 휘발됩니다. 그렇다면 입력받은 값을 변수에 대입하면 저장이 되겠네요.'''

name = input("당신의 이름이 무엇입니까? >>> ")
print(name)
print(f"제 이름은{name}입니다.")